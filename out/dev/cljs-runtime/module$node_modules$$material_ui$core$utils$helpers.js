shadow$provide.module$node_modules$$material_ui$core$utils$helpers=function(global,process,require,module,exports,shadow$shims){function contains(obj,pred){return Object.keys(pred).every(function(key){return obj.hasOwnProperty(key)&&obj[key]===pred[key]})}function findIndex(arr,pred){for(var predType=(0,_typeof2.default)(pred),i=0;i<arr.length;i+=1){if("function"===predType&&!0===!!pred(arr[i],i,arr)||"object"===predType&&contains(arr[i],pred))return i;if(-1!==["string","number","boolean"].indexOf(predType))return arr.indexOf(pred)}return-1}
global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.capitalize=function(string){if("string"!==typeof string)throw Error("Material-UI: capitalize(string) expects a string argument.");return string.charAt(0).toUpperCase()+string.slice(1)};exports.contains=contains;exports.findIndex=findIndex;exports.find=function(arr,pred){pred=findIndex(arr,pred);return-1<pred?arr[pred]:void 0};exports.createChainedFunction=
function(){for(var _len=arguments.length,funcs=Array(_len),_key=0;_key<_len;_key++)funcs[_key]=arguments[_key];return funcs.reduce(function(acc,func){if(null==func)return acc;(0,_warning.default)("function"===typeof func,"Material-UI: invalid Argument Type, must only provide functions, undefined, or null.");return function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];acc.apply(this,args);func.apply(this,args)}},function(){})};var _typeof2=
global(require("module$node_modules$$babel$runtime$helpers$typeof")),_warning=global(require("module$node_modules$warning$warning"))}
//# sourceMappingURL=module$node_modules$$material_ui$core$utils$helpers.js.map
