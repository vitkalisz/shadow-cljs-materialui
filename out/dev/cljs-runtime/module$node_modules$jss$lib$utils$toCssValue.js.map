{
"version":3,
"file":"module$node_modules$jss$lib$utils$toCssValue.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG9HC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAA,CAAQ,SAAR,CAAA,CAoBAK,QAAmB,CAACD,KAAD,CAAQ,CACzB,IAAIE,gBAAqC,CAAnB,CAAAC,SAAAC,OAAA,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,CAAA,CAE1F,IAAI,CAACG,KAAAC,QAAA,CAAcP,KAAd,CAAL,CAA2B,MAAOA,MAElC,KAAIQ,SAAW,EAGf,IAAIF,KAAAC,QAAA,CAAcP,KAAA,CAAM,CAAN,CAAd,CAAJ,CACE,IAAK,IAAIS,EAAI,CAAb,CAAgBA,CAAhB,CAAoBT,KAAAI,OAApB,EACmB,YADnB,GACMJ,KAAA,CAAMS,CAAN,CADN,CAAkCA,CAAA,EAAlC,CAEMD,QACJ,GADcA,QACd,EAD0B,IAC1B,EAAAA,QAAA,EAAYE,IAAA,CAAKV,KAAA,CAAMS,CAAN,CAAL,CAAe,GAAf,CAJhB,KAMOD,SAAA,CAAWE,IAAA,CAAKV,KAAL;AAAY,IAAZ,CAGbE,gBAAL,EAAoD,YAApD,GAAwBF,KAAA,CAAMA,KAAAI,OAAN,CAAqB,CAArB,CAAxB,GACEI,QADF,EACc,aADd,CAIA,OAAOA,SArBkB,CAnB3B,KAAIE,KAAOA,QAAa,CAACV,KAAD,CAAQW,EAAR,CAAY,CAElC,IADA,IAAIC,OAAS,EAAb,CACSH,EAAI,CAAb,CAAgBA,CAAhB,CAAoBT,KAAAI,OAApB,EAEmB,YAFnB,GAEMJ,KAAA,CAAMS,CAAN,CAFN,CAAkCA,CAAA,EAAlC,CAGMG,MACJ,GADYA,MACZ,EADsBD,EACtB,EAAAC,MAAA,EAAUZ,KAAA,CAAMS,CAAN,CAEZ,OAAOG,OAR2B,CAP0F;",
"sources":["node_modules/jss/lib/utils/toCssValue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jss$lib$utils$toCssValue\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = toCssValue;\nvar join = function join(value, by) {\n  var result = '';\n  for (var i = 0; i < value.length; i++) {\n    // Remove !important from the value, it will be readded later.\n    if (value[i] === '!important') break;\n    if (result) result += by;\n    result += value[i];\n  }\n  return result;\n};\n\n/**\n * Converts array values to string.\n *\n * `margin: [['5px', '10px']]` > `margin: 5px 10px;`\n * `border: ['1px', '2px']` > `border: 1px, 2px;`\n * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`\n * `color: ['red', !important]` > `color: red !important;`\n */\nfunction toCssValue(value) {\n  var ignoreImportant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!Array.isArray(value)) return value;\n\n  var cssValue = '';\n\n  // Support space separated values via `[['5px', '10px']]`.\n  if (Array.isArray(value[0])) {\n    for (var i = 0; i < value.length; i++) {\n      if (value[i] === '!important') break;\n      if (cssValue) cssValue += ', ';\n      cssValue += join(value[i], ' ');\n    }\n  } else cssValue = join(value, ', ');\n\n  // Add !important, because it was ignored.\n  if (!ignoreImportant && value[value.length - 1] === '!important') {\n    cssValue += ' !important';\n  }\n\n  return cssValue;\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","toCssValue","ignoreImportant","arguments","length","undefined","Array","isArray","cssValue","i","join","by","result"]
}
