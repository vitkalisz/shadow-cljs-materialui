shadow$provide.module$node_modules$jss$lib$PluginsRegistry=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,
protoProps,staticProps){protoProps&&defineProperties(Constructor.prototype,protoProps);staticProps&&defineProperties(Constructor,staticProps);return Constructor}}(),_warning2=(global=require("module$node_modules$warning$warning"))&&global.__esModule?global:{"default":global};global=function(){function PluginsRegistry(){if(!(this instanceof PluginsRegistry))throw new TypeError("Cannot call a class as a function");this.hooks={onCreateRule:[],onProcessRule:[],onProcessStyle:[],onProcessSheet:[],onChangeValue:[],
onUpdate:[]}}_createClass(PluginsRegistry,[{key:"onCreateRule",value:function(name,decl,options){for(var i=0;i<this.hooks.onCreateRule.length;i++){var rule=this.hooks.onCreateRule[i](name,decl,options);if(rule)return rule}return null}},{key:"onProcessRule",value:function(rule){if(!rule.isProcessed){for(var sheet=rule.options.sheet,i=0;i<this.hooks.onProcessRule.length;i++)this.hooks.onProcessRule[i](rule,sheet);if(rule.style)this.onProcessStyle(rule.style,rule,sheet);rule.isProcessed=!0}}},{key:"onProcessStyle",
value:function(style,rule,sheet){for(var i=0;i<this.hooks.onProcessStyle.length;i++)style=this.hooks.onProcessStyle[i](style,rule,sheet),rule.style=style}},{key:"onProcessSheet",value:function(sheet){for(var i=0;i<this.hooks.onProcessSheet.length;i++)this.hooks.onProcessSheet[i](sheet)}},{key:"onUpdate",value:function(data,rule,sheet){for(var i=0;i<this.hooks.onUpdate.length;i++)this.hooks.onUpdate[i](data,rule,sheet)}},{key:"onChangeValue",value:function(value,prop,rule){for(var i=0;i<this.hooks.onChangeValue.length;i++)value=
this.hooks.onChangeValue[i](value,prop,rule);return value}},{key:"use",value:function(plugin){for(var name in plugin)this.hooks[name]?this.hooks[name].push(plugin[name]):(0,_warning2["default"])(!1,'[JSS] Unknown hook "%s".',name)}}]);return PluginsRegistry}();exports["default"]=global}
//# sourceMappingURL=module$node_modules$jss$lib$PluginsRegistry.js.map
