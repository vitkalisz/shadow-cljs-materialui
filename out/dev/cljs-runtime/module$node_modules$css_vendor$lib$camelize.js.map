{
"version":3,
"file":"module$node_modules$css_vendor$lib$camelize.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAmB7HC,QAASA,QAAO,CAACC,KAAD,CAAQC,CAAR,CAAW,CACzB,MAAOA,EAAA,CAAIA,CAAAC,YAAA,EAAJ,CAAsB,EADJ,CAhB3BC,MAAAC,eAAA,CAAsBP,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CQ,MAAO,CAAA,CADoC,CAA7C,CAGAR,QAAA,CAAQ,SAAR,CAAA,CASAS,QAAiB,CAACC,GAAD,CAAM,CACrB,MAAOA,IAAAC,QAAA,CAAYC,MAAZ,CAAoBV,OAApB,CADc,CARvB,KAAIU,OAAS,aAPgH;",
"sources":["node_modules/css-vendor/lib/camelize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$css_vendor$lib$camelize\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = camelize;\nvar regExp = /[-\\s]+(.)?/g;\n\n/**\n * Convert dash separated strings to camel cased.\n *\n * @param {String} str\n * @return {String}\n */\nfunction camelize(str) {\n  return str.replace(regExp, toUpper);\n}\n\nfunction toUpper(match, c) {\n  return c ? c.toUpperCase() : '';\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","toUpper","match","c","toUpperCase","Object","defineProperty","value","camelize","str","replace","regExp"]
}
