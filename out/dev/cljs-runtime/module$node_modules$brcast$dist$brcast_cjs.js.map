{
"version":3,
"file":"module$node_modules$brcast$dist$brcast_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAwC5HF,MAAAC,QAAA,CAvCAE,QAAyB,CAACC,YAAD,CAAe,CACtC,IAAIC,UAAY,EAAhB,CACIC,YAAK,CADT,CAEIC,OAASH,YAiCb,OAAO,CAAEI,SA/BTA,QAAkB,EAAG,CACnB,MAAOD,OADY,CA+Bd,CAAsBE,SA3B7BA,QAAkB,CAACC,KAAD,CAAQ,CACxBH,MAAA,CAASG,KAIT,KAHA,IAAIC,KAAOC,MAAAD,KAAA,CAAYN,SAAZ,CAAX,CACIQ,EAAI,CADR,CAEIC,IAAMH,IAAAI,OACV,CAAOF,CAAP,CAAWC,GAAX,CAAgBD,CAAA,EAAhB,CAEE,GAAIR,SAAA,CAAUM,IAAA,CAAKE,CAAL,CAAV,CAAJ,CAA0BR,SAAA,CAAUM,IAAA,CAAKE,CAAL,CAAV,CAAA,CAAmBH,KAAnB,CAPJ,CA2BnB,CAA0CM,UAfjDA,QAAmB,CAACC,QAAD,CAAW,CAC5B,GAAwB,UAAxB,GAAI,MAAOA,SAAX,CACE,KAAUC,MAAJ,CAAU,8BAAV,CAAN;AAEF,IAAIC,UAAYb,WAChBD,UAAA,CAAUc,SAAV,CAAA,CAAuBF,QACvBX,YAAA,EAAM,CACN,OAAOa,UAPqB,CAevB,CAAgEC,YAJvEA,QAAqB,CAACd,EAAD,CAAK,CACxBD,SAAA,CAAUC,EAAV,CAAA,CAAgBe,IAAAA,EADQ,CAInB,CApC+B,CADoF;",
"sources":["node_modules/brcast/dist/brcast.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$brcast$dist$brcast_cjs\"] = function(global,process,require,module,exports,shadow$shims) {\nfunction createBroadcast (initialState) {\n  var listeners = {};\n  var id = 1;\n  var _state = initialState;\n\n  function getState () {\n    return _state\n  }\n\n  function setState (state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n    var i = 0;\n    var len = keys.length;\n    for (; i < len; i++) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (listeners[keys[i]]) { listeners[keys[i]](state); }\n    }\n  }\n\n  // subscribe to changes and return the subscriptionId\n  function subscribe (listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.')\n    }\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    return currentId\n  }\n\n  // remove subscription by removing the listener function\n  function unsubscribe (id) {\n    listeners[id] = undefined;\n  }\n\n  return { getState: getState, setState: setState, subscribe: subscribe, unsubscribe: unsubscribe }\n}\n\nmodule.exports = createBroadcast;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","createBroadcast","initialState","listeners","id","_state","getState","setState","state","keys","Object","i","len","length","subscribe","listener","Error","currentId","unsubscribe","undefined"]
}
