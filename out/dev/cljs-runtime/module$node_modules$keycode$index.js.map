{
"version":3,
"file":"module$node_modules$keycode$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/keycode/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$keycode$index\"] = function(global,process,require,module,exports,shadow$shims) {\n// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '\u21e7': 16,\n  '\u2325': 18,\n  '\u2303': 17,\n  '\u2318': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","keyCode","searchInput","hasKeyCode","which","charCode","names","search","String","foundNamedKey","codes","toLowerCase","aliases","length","charCodeAt","isEventKey","keyCode.isEventKey","event","nameOrCode","undefined","code","i","fromCharCode","title","alias"]
}
