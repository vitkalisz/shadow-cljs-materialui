shadow$provide.module$node_modules$$material_ui$core$styles$getStylesCreator=function(global,process,require,module,exports,shadow$shims){function arrayMerge(destination,source){return source}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),
_warning=global(require("module$node_modules$warning$warning")),_deepmerge=global(require("module$node_modules$deepmerge$dist$umd"));exports.default=function(stylesOrCreator){var themingEnabled="function"===typeof stylesOrCreator;(0,_warning.default)("object"===(0,_typeof2.default)(stylesOrCreator)||themingEnabled,"Material-UI: the first argument provided to withStyles() is invalid.\nYou need to provide a function generating the styles or a styles object.");return{create:function(theme,name){var styles=
themingEnabled?stylesOrCreator(theme):stylesOrCreator;if(!name||!theme.overrides||!theme.overrides[name])return styles;var overrides=theme.overrides[name],stylesWithOverrides=(0,_extends2.default)({},styles);Object.keys(overrides).forEach(function(key){(0,_warning.default)(stylesWithOverrides[key],["Material-UI: you are trying to override a style that does not exist.","Fix the `".concat(key,"` key of `theme.overrides.").concat(name,"`.")].join("\n"));stylesWithOverrides[key]=(0,_deepmerge.default)(stylesWithOverrides[key],
overrides[key],{arrayMerge:arrayMerge})});return stylesWithOverrides},options:{},themingEnabled:themingEnabled}}}
//# sourceMappingURL=module$node_modules$$material_ui$core$styles$getStylesCreator.js.map
